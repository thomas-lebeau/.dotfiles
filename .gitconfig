[core]
  editor = code --wait
  excludesfile = ~/.gitignore
  attributesfile = ~/.gitattributes
  quotepath = false
  autocrlf = input
  # Make `git rebase` safer on macOS
  # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime = false

[color]
  ui = auto

[commit]
  gpgsign = true

[merge]
  tool = opendiff

[credential]
  helper = osxkeychain

[fetch]
  prune = true

[branch]
	autosetuprebase = always

[user]
  useconfigonly = true

[push]
  default = simple

[status]
  showUntrackedFiles = all

[alias]
  br = branch
  ca = commit --amend
  ci = commit
  cm = commit -m
  co = checkout
  ls = log --pretty=oneline --abbrev-commit --graph --decorate -n 10
  nb = "!f() { git checkout -b feat/NR1UI-$1-$2 master; }; f"
  nm = "!f() { git add . && git stash && git checkout -b $1 master && git stash pop; }; f"
  ra = rebase --abort
  rc = rebase --continue
  ri = rebase master -i
  rs = rebase --skip
  st = !git status -s && git diff --shortstat
  w = which
  cl = lucky

  aliases = !git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
  abort = checkout -- .
  amend = commit --amend --no-edit
  clean = "!f() { git branch --no-color --merged | grep -v '*' | xargs -n 1 git branch -d; }; f"
  co-pr = !sh -c 'git fetch upstream pull/$1/head:pr/$1 && git checkout pr/$1' -
  diff = diff --word-diff
  fixup = commit -m 'chore(*): Fixup'
  force = push --force-with-lease
  pur = pull upstream master --rebase --log --no-stat
  stsh = stash --keep-index
  staash = stash --include-untracked
  staaash = stash --all
  standup = "!f() { for dir in ../*; do (echo "$dir" && cd "$dir" && git su); done; }; f"
  su = !"git log --branches --since=$(if [[ "Mon" == "$(date +%a)" ]]; then echo "last friday"; else echo "yesterday"; fi) --author=$(git config --get user.email) --format=format:'%C(cyan)%>(14)%ar %C(yellow)%h %Creset %s'"
  undo = reset --soft HEAD^
  wait = reset HEAD
  which = !git branch | grep -i
  lucky = !sh -c 'git checkout $(git which $1 -m1)' -

[filter "media"]
  clean = git media clean %f
  smudge = git media smudge %f
  required = true

[filter "hawser"]
  clean = git hawser clean %f
  smudge = git hawser smudge %f
  required = true

[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true

[include]
  # For username / github token / etc
  path = ~/.gitconfig.local

[merge "npm-merge-driver"]
	name = automatically merge npm lockfiles
	driver = npx npm-merge-driver merge %A %O %B %P
