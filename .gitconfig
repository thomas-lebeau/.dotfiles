[core]
  editor = subl -n -w
  excludesfile = ~/.gitignore
  attributesfile = ~/.gitattributes
  quotepath = false
  autocrlf = input

[color]
  ui = always

[merge]
  tool = opendiff

[alias]
  st = status -s

  c = checkout
  cl = clone
  ci = commit
  cm = commit -m
  cma = commit -a -m
  ca = commit --amend
  amend = commit --amend
  caa = commit -a --amend -C HEAD
  # commit with random message
  ci-rand = !sh -c \"git commit -m '$(curl -s http://whatthecommit.com/index.txt)'\"

  filelog = log -u
  fl = log -u
  f = fetch
  p = pull
  fp = "!f() { git fetch && git pull; }; f"
  fm = "!f() { git fetch origin develop:develop && git merge develop; }; f"

  ai = add --interactive

  co = "!f() { git branch --no-color $1 | peco | sed -E -e 's/^[ \t]*(remotes\\/)?origin\\///' | xargs git checkout; }; f"
  fco = "!f() { git fetch && git co -a; }; f"

  br = branch
  bra = branch -ra
  #list commands
  le = log --oneline --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
  lc  = "!f() { git ll "$1"^.."$1"; }; f"
  lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
  #list all aliases
  la = "!git config -l | grep alias | cut -c 7-"
  diff = diff --word-diff
  d = diff --word-diff
  dc = diff --cached
  #list modified files in last commit
  dl = "!git ll -1"
  #diff last commit
  dlc = diff --cached HEAD^
  dr  = "!f() { git diff "$1"^.."$1"; }; f"
  diffr  = "!f() { git diff "$1"^.."$1"; }; f"

  #reset commands
  r = reset
  r1 = reset HEAD^
  r2 = reset HEAD^^
  rh = reset --hard
  rh1 = reset HEAD^ --hard
  rh2 = reset HEAD^^ --hard

  #git svn
  svnr = svn rebase
  svnd = svn dcommit
  svnl = svn log --oneline --show-commit

  #stash
  sl = stash list
  sa = stash apply
  ss = stash save

  cp = cherry-pick
  grep = grep -Ii
  gr = grep -Ii

  #grep from root folder
  gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

  #grep on filename
  #f = "!git ls-files | grep -i"

  #assume aliases
  assume = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  #show assumed files
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  #unassume all the assumed files
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"

  lasttag = describe --tags --abbrev=0
  lt = describe --tags --abbrev=0

  #merges
  ours = "!f() { git co --ours $@ && git add $@; }; f"
  theirs = "!f() { git co --theirs $@ && git add $@; }; f"

[push]
  default = current

[url "https://"]
  insteadOf = git://

[filter "media"]
  clean = git media clean %f
  smudge = git media smudge %f
  required = true

[filter "hawser"]
  clean = git hawser clean %f
  smudge = git hawser smudge %f
  required = true

[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true

[include]
  # For username / github token / etc
  path = ~/.gitconfig.local

[credential]
	helper = osxkeychain
